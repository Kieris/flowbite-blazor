<div role="status" class="flex justify-center items-center aspect-video @GetSizeClass() bg-neutral-300 rounded-lg @(Animate ? "animate-pulse" : "") dark:bg-neutral-700 @Class">
  <svg width="48" height="48" class="text-neutral-200 dark:text-neutral-600" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 20">
    <path d="M5 5V.13a2.96 2.96 0 0 0-1.293.749L.879 3.707A2.98 2.98 0 0 0 .13 5H5Z"/>
    <path d="M14.066 0H7v5a2 2 0 0 1-2 2H0v11a1.97 1.97 0 0 0 1.934 2h12.132A1.97 1.97 0 0 0 16 18V2a1.97 1.97 0 0 0-1.934-2ZM9 13a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2Zm4 .382a1 1 0 0 1-1.447.894L10 13v-2l1.553-1.276a1 1 0 0 1 1.447.894v2.764Z"/>
  </svg>
  <span class="sr-only">Loading...</span>
</div>

@code {
  /// <summary>
  /// Defines classes to add to the top element
  /// </summary>
  [Parameter]
  public string? Class { get; set; }

  /// <summary>
  /// Defines the size of the skeleton
  /// </summary>
  [Parameter]
  public SkSize Size { get; set; } = SkSize.Sm;

  /// <summary>
  /// Defines whether to animate the skeleton
  /// </summary>
  [Parameter]
  public bool Animate { get; set; } = true;

  /// <summary>
  /// Retrieves the correct string for size class
  /// </summary>
  private string GetSizeClass()
  {
    switch (Size)
    {
      case SkSize.Sm:
        return "max-w-sm";
      case SkSize.Md:
        return "max-w-md";
      case SkSize.Lg:
        return "max-w-lg";
      case SkSize.Xl:
        return "max-w-xl";
      case SkSize.Xxl:
        return "max-w-2xl";
      default: return string.Empty;
    }
  }
}