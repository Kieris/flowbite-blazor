@inherits Frame
<li class="@Class" style="@Style">
    <NavLink href="@Link" class="@GetNavLinkClass()" 
             Match="NavLinkMatch.All" ActiveClass="@(string.IsNullOrWhiteSpace(Parent?.ActiveClass) ? "sidebar-dropdown-active" : $"pl-11 {Parent.ActiveClass}")">
    @Label
  </NavLink>
</li>

@code {
    /// <summary>
    /// The Sidebar parent
    /// </summary>
    [CascadingParameter]
    private Sidebar? Parent { get; set; }
    
    /// <summary>
    /// The link (href)
    /// </summary>
    [Parameter]
    public string Link { get; set; } = string.Empty;
    
    /// <summary>
    /// The label for the dropdown item
    /// </summary>
    [Parameter]
    public string Label { get; set; } = string.Empty;

    /// <summary>
    /// Watches for parameter changes and sets <see cref="Link"/> from href if needed
    /// </summary>
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Attributes.TryGetValue("href", out var attribute))
        {
            Link = attribute.ToString()!;
        }
    }
    
    /// <summary>
    /// Used to get NavLink class because component attributes do not support complex content (mixed C# and markup).
    /// </summary>
    private string GetNavLinkClass()
    {
        return string.IsNullOrWhiteSpace(Parent?.InactiveClass) ? "sidebar-dropdown-inactive" : $"pl-11 {Parent.InactiveClass}"!;
    }
}