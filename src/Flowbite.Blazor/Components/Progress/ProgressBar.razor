@using Flowbite.Blazor.SharedEnums
<div class="w-full bg-gray-200 rounded-full @_size dark:bg-gray-700 @OuterClass">
    <div class="@GetColor() @_size @(LabelInside is not null ? "text-xs font-medium text-blue-100 text-center p-0.5 leading-none" : "") rounded-full @InnerClass" style="width: @Progress%">
        @LabelInside
    </div>
    
</div>

@code {
    /// <summary>
    /// Defines the outer div class for ProgressBar
    /// </summary>
    [Parameter]
    public string? OuterClass { get; set; }
    
    /// <summary>
    /// Defines the inner div class for ProgressBar
    /// </summary>
    [Parameter]
    public string? InnerClass { get; set; }
    
    /// <summary>
    /// Defines the label inside the ProgressBar
    /// </summary>
    [Parameter]
    public string? LabelInside { get; set; }
    
    /// <summary>
    /// Defines the color of the ProgressBar
    /// </summary>
    [Parameter]
    public Colors Color { get; set; } = Colors.Primary;
    
    /// <summary>
    /// Defines the progress (width%) of the ProgressBar
    /// </summary>
    [Parameter]
    public int Progress { get; set; }

    /// <summary>
    /// Defines the size for ProgressBar
    /// </summary>
    [Parameter]
    public Sizes Size { get; set; } = Sizes.Base;

    /// <summary>
    /// ProgressBar size class
    /// </summary>
    private string _size = "h-2.5";
    
    /// <summary>
    /// Initialize the component and get size class
    /// </summary>
    protected override void OnInitialized()
    {
        _size = GetSize();
    }
    
    /// <summary>
    /// Get the progress bar size
    /// </summary>
    private string GetSize()
    {
        switch (Size)
        {
            case Sizes.ExtraLarge:
                return "h-6";
            case Sizes.Large:
                return "h-4";
            case Sizes.Small:
                return "h-1.5";
            case Sizes.ExtraSmall:
                return "h-1";
            default:
                return "h-2.5";
        }
    }

    /// <summary>
    /// Get the progress bar color
    /// </summary>
    private string GetColor()
    {
        switch (Color)
        {
            case Colors.Primary:
                return "bg-primary-600";
            case Colors.Supporting:
                return "bg-supporting-600 dark:bg-supporting-500";
            case Colors.Success:
                return "bg-success-600 dark:bg-success-500";
            case Colors.Warning:
                return "bg-warning-400";
            case Colors.Danger:
                return "bg-danger-600 dark:bg-danger-500";
            case Colors.Accent:
                return "bg-accent-600 dark:bg-accent-500";
            case Colors.Dark:
                return "bg-neutral-600 dark:bg-neutral-300";
            default: return "bg-blue-600";
        }
    }
}